const EventEmitter=require("events")["EventEmitter"],Proto=require("uberproto"),eventHook=exports.eventHook=function(){return function(t){const{app:e,service:n}=t,o=null===t.event?t.event:e.eventMappings[t.method];var i=n._hookEvents&&-1!==n._hookEvents.indexOf(o);if(o&&i&&"error"!==t.type){const r=Array.isArray(t.result)?t.result:[t.result];r.forEach(e=>n.emit(o,e,t))}}},eventMixin=exports.eventMixin=function(o){if(!o._serviceEvents){const i=this;var e="function"==typeof o.on&&"function"==typeof o.emit;"function"!=typeof o.mixin||e||o.mixin(EventEmitter.prototype),Object.defineProperties(o,{_serviceEvents:{value:Array.isArray(o.events)?o.events.slice():[]},_hookEvents:{value:[]}}),Object.keys(i.eventMappings).forEach(e=>{var t=i.eventMappings[e],n=-1!==o._serviceEvents.indexOf(t);"function"!=typeof o[e]||n||(o._serviceEvents.push(t),o._hookEvents.push(t))})}};module.exports=function(){return function(e){Object.assign(e,{eventMappings:{create:"created",update:"updated",remove:"removed",patch:"patched"}}),e.hooks({finally:eventHook()}),Proto.mixin(EventEmitter.prototype,e),e.mixins.push(eventMixin)}};